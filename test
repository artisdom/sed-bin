#!/bin/sh

. "${CLASH_ROOT-.}"/test/testlib/assert || exit

bin=./sed-bin
translator=./par.sed
generated_file=generated.c

verify() {
  sed_code="$1"
  input="$2"
  expected_output="$(mktemp)"
  bin_output="$(mktemp)"
  printf '%s\n' "$input" | sed "$1" > "$expected_output"
  printf '%s\n' "$sed_code" |  "$translator" > "$generated_file"
  make -s
  printf '%s\n' "$input" |  "$bin" > "$bin_output"

  assert_true diff "$expected_output" "$bin_output" -- "input: $input - code: $sed_code"

  rm -f "$bin_output" "$expected_output"
}

# Replace by smaller
verify 's/Hell/Y/' 'Hello World'
verify 's/llo W/y w/' 'Hello World'
verify 's/ World/!/' 'Hello World'
# Replace by bigger
verify 's/Hello/What in the/' 'Hello World'
verify 's/o/ what is wrong with this/' 'Hello World'
verify 's/ld/k! Oh no :(/' 'Hello World'
# Replace by same size
verify 's/Hello/Yolo!/' 'Hello World'
verify 's/o/a/' 'Hello World'
verify 's/ld/k!/' 'Hello World'
# With regex
verify 's/[hH]/Well h/' 'Hello World'
verify 's/. ./a-w/' 'Hello World'
verify 's/o.*/!/' 'Hello World'
verify 's/.*//' 'Hello World'
verify 's/.*/Bye/' 'Hello World'
verify 's/[Hh]ello.* World*//' 'Hello World'
verify 's/Hello World/Bye/' 'Hello World'
verify 's/Hello World//' 'Hello World'
# Fail
verify 's/xz/nope/' 'Hello World'
# Back refs
verify 's/\([^ ]*\)/\1! \1/' 'Hello World'
verify 's/\([^ ]*\) \(.\)/\1! \2 /' 'Hello World'
verify 's/.*r/& & &/' 'Hello World'
# g opt
verify 's/o/a/g' 'Hello World'
verify 's/o/abocde/g' 'Hello World'
verify 's/o/ yo/g' 'Hello World'
verify 's/damn/no/g' 'Oh damn god damnit'
verify 's/damn/n/g' 'Oh damn god damnit'
verify 's/.*/Bye/g' 'Hello World'
verify 's/\([^ ]*\)/\1! \1/g' 'Hello World'
verify 'H;H;G;' 'Hello World'

end_tests
